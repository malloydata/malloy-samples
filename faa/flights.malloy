source: carriers is duckdb.table('data/carriers.parquet') extend {
  primary_key: code
  measure: carrier_count is count()
}

source: airports is duckdb.table('data/airports.parquet') extend {
  primary_key: code
  measure: airport_count is count()
  dimension: name is concat(code, '-', full_name )
}

source: aircraft_models is duckdb.table('data/aircraft_models.parquet') extend {
  primary_key: aircraft_model_code
  measure: aircraft_model_count is count()
}

source: aircraft is duckdb.table('data/aircraft.parquet') extend {
  primary_key: tail_num
  measure: aircraft_count is count()
  join_one: aircraft_models with aircraft_model_code
}

source: flights is duckdb.table('data/flights.parquet') extend {
  primary_key: id2

  // rename some fields as from their physical names
  rename: origin_code is origin
  rename: destination_code is destination

  join_one: carriers with carrier
  join_one: origin is airports with origin_code
  join_one: destination is airports with destination_code
  join_one: aircraft with tail_num

  measure:
    flight_count is count()
    total_distance is sum(distance)
    destination_count is destination.airport_count
    origin_count is origin.count()

    seats_for_sale is source.sum(aircraft.aircraft_models.seats)
    seats_owned is aircraft.sum(aircraft.aircraft_models.seats)
    average_plane_size is aircraft.avg(aircraft.aircraft_models.seats)
    average_flight_distance is distance.avg()

  view: top_carriers is {
    group_by: carriers.nickname
    aggregate:
      flight_count
      destination_count
      percentage_of_flights is flight_count/all(flight_count) *100
  }

  # line_chart
  view: carriers_over_time is {
    group_by: dep_month is dep_time.month
    aggregate: flight_count
    group_by: carriers.nickname
    limit: 10000
  }

  view: top_origins is {
    top: 5
    group_by: origin.name
    aggregate:
      flight_count
      destination_count
      carriers.carrier_count
      percent_of_flights is flight_count/all(flight_count) *100
  }

  view: top_destinations is {
      top: 5
      group_by: destination.code, destination.full_name
      aggregate:
        flight_count
        percent_of_flights_to_destination
          is flight_count/all(flight_count)*100
    }

  # line_chart
  view: by_month is {
    group_by: dep_month is dep_time.month
    aggregate: flight_count
  }

  view: by_manufacturer is {
      group_by: aircraft.aircraft_models.manufacturer
      aggregate: flight_count, aircraft.aircraft_count
      limit: 3
    }

  # segment_map
  view: top_routes_map is {
    group_by:
      origin.latitude
      origin.longitude
      latitude2 is destination.latitude
      longitude2 is destination.longitude
    aggregate: flight_count
    limit: 100
  }
  -> {select: latitude,longitude,latitude2,longitude2}

  # dashboard
  view: carrier_dashboard is {
    aggregate: destination_count
    aggregate: flight_count
    nest:
      by_manufacturer
      by_month
    nest: hubs is {
      top: 5
      having: destination.airport_count > 1
      group_by: hub is origin.name
      aggregate:
        destination_count
        flight_count
    }
    nest: origin_dashboard is {
      top: 5
      group_by:
        code is origin_code,
        origin is origin.full_name,
        origin.city
      aggregate: flight_count
      # line_chart
      nest: destinations_by_month is {
        group_by: dep_month is dep_time.month
        aggregate: flight_count
        group_by: destination.name
      }
      nest: top_routes_map
    }
  }

  view: search_index is {
    index:
      *,
      origin.*,
      carriers.*,
      destination.*
  }
}
